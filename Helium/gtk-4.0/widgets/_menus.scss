popover.menu {
  padding: 0;
  box.inline-buttons {
    padding: 0;

    button.image-button.model {
      @extend %button_basic_flat;
      min-height: 48px;
      padding: 0 12px;
      border: none;
      outline: none;
      transition: none;

      &:selected {
        background: state-color($surface_bg_color, $surface_fg_color, 1); color: $window_fg_color;

        &:active {
          background: state-color($surface_bg_color, $surface_fg_color, 2); color: $window_fg_color;
        }
      }
    }
  }

  box.circular-buttons {
    padding: 0;

    button.circular.image-button.model {
      @extend %button_basic_flat;
      outline: none;
      box-shadow: inset 0 0 0 1px $border_color;

      &:selected {
        background: state-color($surface_bg_color, $surface_fg_color, 1); color: $window_fg_color;

        @if $contrast != 'high' {
          box-shadow: none;
        }

        &:active {
          background: state-color($surface_bg_color, $surface_fg_color, 2); color: $window_fg_color;
        }
      }
    }
  }

  > contents {
    &, > scrolledwindow > viewport {
      > stack > box {
        padding: 8px 0;
      }
    }
  }

  separator {
    margin: 8px 0;
  }

  list separator {
    margin: 0;
  }

  accelerator {
    color: gtkalpha(currentColor, $dim_label_opacity);

    &:dir(ltr) { margin-left: $menu_padding; }
    &:dir(rtl) { margin-right: $menu_padding; }
  }

  check,
  radio {
    min-width: 24px;
    min-height: 24px;
    -gtk-icon-size: 24px;
    padding: 2px;

    &,
    &:hover:checked,
    &:hover:indeterminate,
    &:hover:not(:checked):not(:indeterminate) {
      background: none;
      box-shadow: none;
      color: inherit;
    }
  }

  .osd & {
    check, radio {
      background: none;
      color: inherit;
    }
  }

  //only menu radios have a border
  radio {
    padding: 1px;
    border: 1px solid gtkalpha(currentColor, $dimmer_opacity);
  }

  check,
  radio,
  arrow {
    &.left {
      margin-left: -2px;
      margin-right: 6px;
    }

    &.right {
      margin-left: 6px;
      margin-right: -2px;
    }
  }

  modelbutton {
    padding: 0 12px;
    min-height: 48px;
    border-radius: 0;

    @extend %undecorated_button;

    &:hover,
    &:selected {
      background: state-color($surface_bg_color, $surface_fg_color, 1); color: $window_fg_color;

      &:active {
        background: state-color($surface_bg_color, $surface_fg_color, 2); color: $window_fg_color; // matching buttons
      }
    }

    arrow {
      background: none;
      min-width: 16px;
      min-height: 16px;
      opacity: $dimmer_opacity;

      &:hover { background: none; }

      &:disabled {
        filter: opacity($disabled_opacity);
      }

      &.left { -gtk-icon-source: -gtk-icontheme("go-previous-symbolic"); }

      &.right { -gtk-icon-source: -gtk-icontheme("go-next-symbolic"); }
    }
  }

  label.title {
    font-weight: bold;
    padding: 0 $menu_padding;
  }

  list, listview {
    background: none;
    color: inherit;

    > row {
      min-height: 48px;

      &:selected {
        background: none;
      }

      &:hover {
        &, &:selected.activatable {
          background: state-color($surface_bg_color, $surface_fg_color, 1); color: $window_fg_color;
        }
      }

      &:active {
        &, &:selected.activatable {
          background: state-color($surface_bg_color, $surface_fg_color, 2); color: $window_fg_color;
        }
      }

      &.has-open-popup {
        &, &:selected.activatable {
          background: state-color($surface_bg_color, $surface_fg_color, 1); color: $window_fg_color;
        }
      }

      > box {
        border-spacing: 8px;
      }
    }
  }

  // Standalone lists should have same margins as menu sections,
  // but we don't want that on lists inside sections themselves
  contents > list,
  contents > listview,
  scrolledwindow > viewport > list,
  scrolledwindow > listview {
    padding: 8px 0; //only vertical padding. horizontal row size would clip
    > row {
      padding: 0 $menu_margin;
      min-height: 48px;
    }
  }
}

menubar {
  padding: 0px;
  box-shadow: inset 0 -1px $border_color;

  > item {
    min-height: 48px;

    &:hover {
      background: state-color($surface_bg_color, $surface_fg_color, 1); color: $window_fg_color;
    }

    &:selected {
      background: state-color($surface_bg_color, $surface_fg_color, 2); color: $window_fg_color;
    }

    //nested submenus
    popover.menu popover.menu {
      padding: 0;
    }

    popover.menu popover.menu > contents {
      margin: 0;
    }
  }
}
