/* Typography */

.big-display {
  font-size: 42.75pt;
  line-height: 48pt;
  font-weight: 400;
  letter-spacing: 0.5px;
}

.display {
  font-size: 30pt;
  line-height: 32pt;
  font-weight: 300;
  letter-spacing: 0.41px;
}

.view-title {
  font-size: 18pt;
  line-height: 20pt;
  font-weight: 300;
  letter-spacing: 0.15px;
}

.view-subtitle {
  font-size: 15pt;
  line-height: 17pt;
  font-weight: 400;
  letter-spacing: 0.15px;
}

.cb-title {
  font-size: 13.5pt;
  line-height: 15.5pt;
  font-weight: 700;
  letter-spacing: 0.25px;
}

.cb-subtitle {
  font-size: 11.25pt;
  line-height: 13.25pt;
  font-weight: 400;
  letter-spacing: 0.25px;
}

.header {
  font-size: 10pt;
  line-height: 12pt;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 0.4px;
}

.body {
  font-size: 10pt;
  line-height: 12pt;
  font-weight: 400;
  letter-spacing: 0.25px;
}

.caption {
  font-size: 9pt;
  line-height: 8.75pt;
  font-weight: 700;
  letter-spacing: 0.11px;
}

/*
* Colors
* ------
* These have forced fg colors in each situation,
* for each one based on WCAG contrast.
*/

$meson-red: if($variant == "light", #db2860, #ea80a0);
$lepton-orange: if($variant == "light", #f7812b, #fbbb8d);
$electron-yellow: if($variant == "light", #e0a101, #fee8af);
$muon-green: if($variant == "light", #49d05e, #9ae5a6);
$proton-blue: if($variant == "light", #45bafc, #A1DDFF);
$photon-indigo: if($variant == "light", #4426fa, #8572ff);
$tau-purple: if($variant == "light", #8c56bf, #bea0db);
$fermion-pink: if($variant == "light", #bf56a8, #db9fcd);
$baryon-mint: if($variant == "light", #56bfa6, #aee0d4);
$gluon-brown: if($variant == "light", #bf8856, #e0c6ae);
$neutron-light: if($variant == "light", #ababb6, #cdcdd4);
$graviton-dark: if($variant == "light", #2d2d2d, #474747);

@define-color meson_red $meson-red;
@define-color lepton_orange $lepton-orange;
@define-color electron_yellow $electron-yellow;
@define-color muon_green $muon-green;
@define-color proton_blue $proton-blue;
@define-color photon_indigo $photon-indigo;
@define-color tau_purple $tau-purple;
@define-color fermion_pink $fermion-pink;
@define-color baryon_mint $baryon-mint;
@define-color gluon_brown $gluon-brown;

$colors: (
  "meson-red": gtkcolor(meson_red),
  "lepton-orange": gtkcolor(lepton_orange),
  "electron-yellow": gtkcolor(electron_yellow),
  "muon-green": gtkcolor(muon_green),
  "proton-blue": gtkcolor(proton_blue),
  "photon-indigo": gtkcolor(photon_indigo),
  "tau-purple": gtkcolor(tau_purple),
  "fermion-pink": gtkcolor(fermion_pink),
  "baryon-mint": gtkcolor(baryon_mint),
  "gluon-brown": gtkcolor(gluon_brown),
  "neutron-light": $neutron-light,
  "graviton-dark": $graviton-dark,
);

@each $name, $color in $colors {
  .bg-#{$name},
  button.bg-#{$name} {
    background: $color;
    color: $view_bg_color;
	  
    &:hover {
      background: if(
        $variant == "light",
        gtkshade($color, 1.1),
        gtkshade($color, 0.9)
      );
    }

    &:active {
      background: if(
        $variant == "light",
        gtkshade($color, 1.2),
        gtkshade($color, 0.8)
      );
    }
  }
	
  switch.bg-#{$name} {
    background: gtkalpha($color, 0.11);
    color: $view_bg_color;
    border-color: gtkalpha($color, 0.5);
	  
    &:hover {
      background: gtkalpha($color, 0.14);
      &:active { 
        background: gtkalpha($color, 0.15);
      }
    }

    &:checked {
      background: $color;
      border-color: $color;
      &:hover {
        border-color: $color;
        background: $color;
        
        &:active { border-color: $color; background: $color; }
      }
	  }
    
    > slider {
      border-color: gtkalpha($color, 0.5);
    }

    &:hover > slider {
      border-color: $color;
    }

    &:checked > slider { 
      border-color: shade($color, 1.8);
      background-color: shade($color, 1.8);
    }
  }

  .text-#{$name} {
    color: $color;
  }

  .fill-button.#{$name} {
    background: $color;
    color: $view_bg_color;

    &:hover {
      color: $view_bg_color;
      background: if(
        $variant == "light",
        gtkshade($color, 1.1),
        gtkshade($color, 0.9)
      );
    }

    &:active {
      color: $view_bg_color;
      background: if(
        $variant == "light",
        gtkshade($color, 1.2),
        gtkshade($color, 0.8)
      );
    }
  }

  .tint-button.#{$name} {
    background: gtkalpha($color, 0.1);
    color: gtkmix($color, $view_fg_color, 0.66);

    &:hover {
      background: gtkalpha($color, 0.2);
      color: gtkmix($color, $view_fg_color, 0.66);
    }

    &:active {
      background: gtkalpha($color, 0.3);
      color: gtkmix($color, $view_fg_color, 0.66);
    }
  }

  .outline-button.#{$name} {
    background: transparent;
    box-shadow: inset 0 0 0 rem(1px) gtkalpha($color, 0.25);
    color: gtkmix($color, $view_fg_color, 0.66);

    &:hover {
      background: gtkalpha($color, 0.2);
      color: gtkmix($color, $view_fg_color, 0.66);
    }

    &:active {
      background: gtkalpha($color, 0.3);
      color: gtkmix($color, $view_fg_color, 0.66);
    }
  }

  .textual-button.#{$name} {
    background: transparent;
    color: gtkmix($color, $view_fg_color, 0.66);

    &:hover {
      background: gtkalpha($color, 0.1);
      color: gtkmix($color, $view_fg_color, 0.66);
    }

    &:active {
      background: gtkalpha($color, 0.2);
      color: gtkmix($color, $view_fg_color, 0.66);
    }
  }

  .overlay-button.#{$name} {
    background: linear-gradient(0deg, gtkalpha($color, 0.11), gtkalpha($color, 0.11)), $view_bg_color;
    color: $color;
    box-shadow: shadow(3);
  
    &:hover {
      background:linear-gradient(0deg, gtkalpha($color, 0.14), gtkalpha($color, 0.14)), $view_bg_color;
      color: $color;
      box-shadow: shadow(4);
    }

    &:active {
      background: linear-gradient(0deg, gtkalpha($color, 0.11), gtkalpha($color, 0.11)), $view_bg_color;
      color: $color;
      box-shadow: shadow(3);
    }
  }

  .pill-button.#{$name} {
    background: $color;
    color: $view_bg_color;

    &:hover {
      background: if(
        $variant == "light",
        gtkshade($color, 1.1),
        gtkshade($color, 0.9)
      );
    }

    &:active {
      background: if(
        $variant == "light",
        gtkshade($color, 1.2),
        gtkshade($color, 0.8)
      );
    }
  }

  .badge-info.#{$name} {
    background: gtkalpha($color, 0.1);
    color: $color;
  }

  .modifier-badge.#{$name} {
    background: $color;
    color: $view_bg_color;
  }

  .tint-badge.#{$name} {
    background: gtkalpha($color, 0.1);
    color: $color;
  }

  .link-button.#{$name} {
    label {
      color: $color;
      padding: rem(2px) rem(4px);
    }

    &:hover label {
      color: $view_fg_color;
    }
  }
}

.pill-button {
  padding: rem(10px) rem(32px);
  border-radius: rem(9999px);
  background: $accent_bg_color;
  color: $accent_fg_color;

  &:disabled {
    background: gtkalpha($view_fg_color, 0.12);
    color: gtkalpha($view_fg_color, 0.38);
  }

  &:hover {
    background: if(
      $variant == "light",
      gtkshade($accent_bg_color, 1.1),
      gtkshade($accent_bg_color, 0.9)
    );
    box-shadow: shadow(1);
    color: $accent_fg_color;
  }

  &:active {
    background: if(
      $variant == "light",
      gtkshade($accent_bg_color, 1.2),
      gtkshade($accent_bg_color, 0.8)
    );
    color: $accent_fg_color;
  }
}

.disclosure-button {
  background: bg-color(3);
  border-radius: rem(9999px);
  color: $view_fg_color;
	
	-gtk-icon-size: rem(16px);

  &:disabled {
    background: gtkalpha($view_fg_color, 0.12);
    color: gtkalpha($view_fg_color, 0.38);
  }
	
	&.toggle {
	  background: bg-color(3);
    border-radius: rem(9999px);
	  
	  &:hover {
	    background: $accent_bg_color;
	    color: $accent_fg_color;
	  }
    
    &:active {
      background: if(
        $variant == "light",
        gtkshade($accent_bg_color, 1.2),
        gtkshade($accent_bg_color, 0.8)
      );
      color: $accent_fg_color;
    }
		
		&:checked {
      background: if(
        $variant == "light",
        gtkshade($accent_bg_color, 1.2),
        gtkshade($accent_bg_color, 0.8)
      );
      color: $accent_fg_color;
    }
  }
  
  & button {
	  background: bg-color(3);
    border-radius: rem(9999px);
	  
	  &:hover {
	    background: $accent_bg_color;
	    color: $accent_fg_color;
	  }
    
    &:active {
      background: if(
        $variant == "light",
        gtkshade($accent_bg_color, 1.2),
        gtkshade($accent_bg_color, 0.8)
      );
      color: $accent_fg_color;
    }
		&:checked {
      background: if(
        $variant == "light",
        gtkshade($accent_bg_color, 1.2),
        gtkshade($accent_bg_color, 0.8)
      );
      color: $accent_fg_color;
    }
  }
	
  &:hover {
    background: $accent_bg_color;
    color: $accent_fg_color;
  }
  &:active {
    background: if(
      $variant == "light",
      gtkshade($accent_bg_color, 1.2),
      gtkshade($accent_bg_color, 0.8)
    );
    color: $accent_fg_color;
  }
	&:checked {
      background: if(
        $variant == "light",
        gtkshade($accent_bg_color, 1.2),
        gtkshade($accent_bg_color, 0.8)
      );
      color: $accent_fg_color;
    }
}

.iconic-button {
  border-radius: 999px;
  background: bg-color(3);
  color: $view_fg_color;
	
  -gtk-icon-size: rem(16px);

  &:disabled {
    background: gtkalpha($view_fg_color, 0.12);
    color: gtkalpha($view_fg_color, 0.38);
  }
	
	& button {
	  background: bg-color(3);
    border-radius: rem(9999px);
	  
	  &:hover {
	    background: $accent_bg_color;
	    color: $accent_fg_color;
	  }
    
    &:active {
      background: if(
        $variant == "light",
        gtkshade($accent_bg_color, 1.2),
        gtkshade($accent_bg_color, 0.8)
      );
      color: $accent_fg_color;
    }
		
		&:checked {
      background: if(
        $variant == "light",
        gtkshade($accent_bg_color, 1.2),
        gtkshade($accent_bg_color, 0.8)
      );
      color: $accent_fg_color;
    }
  }
	
	&.toggle {
	  background: bg-color(3);
    border-radius: rem(9999px);
	  
	  &:hover {
	    background: $accent_bg_color;
	    color: $accent_fg_color;
	  }
    
    &:active {
      background: if(
        $variant == "light",
        gtkshade($accent_bg_color, 1.2),
        gtkshade($accent_bg_color, 0.8)
      );
      color: $accent_fg_color;
    }
		
		&:checked {
      background: if(
        $variant == "light",
        gtkshade($accent_bg_color, 1.2),
        gtkshade($accent_bg_color, 0.8)
      );
      color: $accent_fg_color;
    }
  }
  
  &:hover {
    background: $accent_bg_color;
    color: $accent_fg_color;
  }
  &:active {
    background: if(
      $variant == "light",
      gtkshade($accent_bg_color, 1.2),
      gtkshade($accent_bg_color, 0.8)
    );
    color: $accent_fg_color;
  }
	&:checked {
      background: if(
        $variant == "light",
        gtkshade($accent_bg_color, 1.2),
        gtkshade($accent_bg_color, 0.8)
      );
      color: $accent_fg_color;
    }
}

.outline-button {
  background: transparent;
  box-shadow: inset 0 0 0 rem(1px) gtkalpha($borders, 0.25);
  color: $accent_color;

  &:disabled {
    box-shadow: inset 0 0 0 rem(1px) gtkalpha($view_fg_color, 0.12);
    color: gtkalpha($view_fg_color, 0.38);
  }

  &:hover {
    background: bg-color(2);
    color: $accent_color;
    box-shadow: shadow(1);
  }

  &:active {
    background: bg-color(3);
    color: $accent_color;
  }
}

.overlay-button-row {
  margin: rem(18px);
}
.overlay-button {
  padding: 16px;
  min-width: 24px;
  min-height: 24px;
  border-radius: rem(999px);
  background: bg-color(0);
  color: $accent_color;
  box-shadow: shadow(3);

  &:disabled {
    background: gtkalpha($view_fg_color, 0.12);
    color: gtkalpha($view_fg_color, 0.38);
    box-shadow: none;
  }
  
  &:hover {
    background: bg-color(2);
    color: $accent_color;
    box-shadow: shadow(4);
  }

  &:active {
    background: bg-color(4);
    color: $accent_color;
    box-shadow: shadow(3);
  }
  
  &.primary {
      background: image($accent_container_bg_color);
      color: $accent_color;
      box-shadow: shadow(3);

      &:hover {
        background: linear-gradient(0deg, gtkalpha($accent_color, 0.08), gtkalpha($accent_color, 0.08)), image($accent_container_bg_color);
        color: $accent_color;
        box-shadow: shadow(4);
      }

      &:active {
        background: linear-gradient(0deg, gtkalpha($accent_color, 0.14), gtkalpha($accent_color, 0.14)), image($accent_container_bg_color);
        color: $accent_color;
        box-shadow: shadow(3);
      }
    }
    
    &.secondary {
      background: image($suggested_container_bg_color);
      color: $suggested_color;
      box-shadow: shadow(3);

      &:hover {
        background: linear-gradient(0deg, gtkalpha($suggested_color, 0.08), gtkalpha($suggested_color, 0.08)), image($suggested_container_bg_color);
        color: $suggested_color;
        box-shadow: shadow(4);
      }

      &:active {
        background: linear-gradient(0deg, gtkalpha($suggested_color, 0.14), gtkalpha($suggested_color, 0.14)), image($suggested_container_bg_color);
        color: $suggested_color;
        box-shadow: shadow(3);
      }
    }
    
    &.tertiary {
      background: image($success_container_bg_color);
      color: $success_color;
      box-shadow: shadow(3);

      &:hover {
        background: linear-gradient(0deg, gtkalpha($success_color, 0.08), gtkalpha($success_color, 0.08)), image($success_container_bg_color);
        color: $success_color;
        box-shadow: shadow(4);
      }

      &:active {
        background: linear-gradient(0deg, gtkalpha($success_color, 0.14), gtkalpha($success_color, 0.14)), image($success_container_bg_color);
        color: $success_color;
        box-shadow: shadow(3);
      }
    }

  & box image {
    -gtk-icon-size: 24px;
  }

  &.small {
    padding: 8px;
    min-width: 24px;
    min-height: 24px;
  }
  &.small box image {
    -gtk-icon-size: 24px;
  }

  &.large {
    padding: 30px;
    min-width: 24px;
    min-height: 24px;
  }
  &.large box image {
    -gtk-icon-size: 36px;
  }

  &.textual {
    padding: 16px;
    min-width: 80px;
    min-height: 24px;

    > box > label {
        margin-left: rem(12.5px);
    }
    
    > box:dir(rtl) > label {
        margin-right: rem(12.5px);
    }
  }
}

.fill-button {
  background: $accent_bg_color;
  color: $accent_fg_color;

  &:disabled {
    background: gtkalpha($view_fg_color, 0.12);
    color: gtkalpha($view_fg_color, 0.38);
  }

  &:hover {
    color: $accent_fg_color;
    background: if(
      $variant == "light",
      gtkshade($accent_bg_color, 1.1),
      gtkshade($accent_bg_color, 0.9)
    );
		box-shadow: shadow(1);
  }

  &:active {
    color: $accent_fg_color;
    background: if(
      $variant == "light",
      gtkshade($accent_bg_color, 1.2),
      gtkshade($accent_bg_color, 0.8)
    );
  }
}

.tint-button {
  background: gtkalpha($accent_bg_color, 0.1);
  color: gtkmix($accent_bg_color, $view_fg_color, 0.5);

  &:disabled {
    background: gtkalpha($view_fg_color, 0.05);
    color: gtkalpha($view_fg_color, 0.38);
  }

  &:hover {
    background: gtkalpha($accent_bg_color, 0.2);
    color: gtkmix($accent_bg_color, $view_fg_color, 0.5);
		box-shadow: shadow(1);
  }

  &:active {
    background: gtkalpha($accent_bg_color, 0.3);
    color: gtkmix($accent_bg_color, $view_fg_color, 0.5);
  }
}

.textual-button {
  background: transparent;
  color: $accent_color;

  &:disabled {
    color: gtkalpha($view_fg_color, 0.38);
  }

  &:hover {
    background: gtkalpha($accent_bg_color, 0.1);
    color: $accent_color;
    box-shadow: shadow(1);
  }

  &:active {
    background: gtkalpha($accent_bg_color, 0.2);
    color: $accent_color;
  }
}

.badge-info {
  background: gtkalpha($accent_bg_color, 0.1);
  color: gtkmix($accent_bg_color, $view_fg_color, 0.9);

  &:disabled {
    background: gtkalpha($view_fg_color, 0.12);
    color: gtkalpha($view_fg_color, 0.38);
  }
}

.modifier-badge {
  background: gtkmix($electron-yellow, $accent_bg_color, 0.1);
  color: gtkmix($accent_bg_color, $view_fg_color, 0.9);

  &:disabled {
    background: gtkalpha($view_fg_color, 0.12);
    color: gtkalpha($view_fg_color, 0.38);
  }
}

.tint-badge {
  background: bg-color(2);
  color: gtkmix($accent_bg_color, $view_fg_color, 0.9);

  &:disabled {
    background: gtkalpha($view_fg_color, 0.12);
    color: gtkalpha($view_fg_color, 0.38);
  }
}

.content-block {
  border-radius: rem(12px);
  padding: rem(18px);
  margin: rem(6px) 0;
  background: bg-color(1);

  &:disabled {
    background: gtkalpha($view_fg_color, 0.12);
    color: gtkalpha($view_fg_color, 0.38);
  }

  & entry {
    background: bg-color(2);
    color: $window_fg_color;
  }

  row:hover & {
    background: bg-color(2);
    color: $accent_color;
  }

  row:active & {
    background: bg-color(3);
    color: $accent_color;
  }

  row:selected & {
    background: bg-color(3);
    color: $accent_color;
  }

  row:selected:hover & {
    background: bg-color(4);
    color: $accent_color;
  }
}

.content-block-image {
  border-radius: rem(12px);
  margin: 6px 0;
}

.mini-content-block {
  border-radius: rem(12px);
  margin: rem(3px) 0;
  padding: rem(12px) rem(16px);
  background: bg-color(1);
	
  & label.cb-title {
    font-size: 11pt;
  }
  & label.cb-subtitle {
    font-size: 10.5pt;
  }

  &:disabled {
    background: gtkalpha($view_fg_color, 0.12);
    color: gtkalpha($view_fg_color, 0.38);
  }

  & entry {
    background: bg-color(2);
    color: $window_fg_color;
  }

  row:hover & {
    background: bg-color(2);
    color: $accent_color;
  }

  row:active & {
    background: bg-color(3);
    color: $accent_color;
  }

  row:selected & {
    background: bg-color(3);
    color: $accent_color;
  }

  row:selected:hover & {
    background: bg-color(4);
    color: $accent_color;
  }
}

.chip {
  box-shadow: inset 0 0 0 rem(1px) gtkalpha($accent_bg_color, 0.15), inset 0 0 0 1px transparent;
  background: transparent;

  &:disabled {
    background: gtkalpha($view_fg_color, 0.12);
    color: gtkalpha($view_fg_color, 0.38);
  }
}
.chip:hover {
  box-shadow: inset 0 0 0 rem(2px) gtkalpha($accent_bg_color, 0.5);
  background: bg-color(1);
  color: $view_fg_color;
  box-shadow: shadow(1);
}
.chip:active {
  box-shadow: none;
  background: bg-color(2);
  color: $view_fg_color;
}

.banner {
  background: bg-color(1);
  box-shadow: 0 0 rem(8px) rem(4px) gtkalpha($view_fg_color, 0.1);
  padding: rem(18px);
  margin-top: rem(12px);
  margin-bottom: rem(18px);

  &:disabled {
    background: gtkalpha($view_fg_color, 0.12);
    color: gtkalpha($view_fg_color, 0.38);
  }

  & box {
    background: none;
    box-shadow: none;
    margin: 0;
    padding: 0;
  }

  & image {
    -gtk-icon-size: rem(32px);
  }

  &.info {
    background: if($variant == "light", #edf6fe, #0453a4);
    color: if($variant == "light", #0453a4, #8ac2fb);
  }

  &.warning {
    background: if($variant == "light", #fff6ef, #a24806);
    color: if($variant == "light", #a24806, #fbbb8d);
  }

  &.error {
    background: if($variant == "light", #f8d8e2, #90183d);
    color: if($variant == "light", #90183d, #ea80a0);
  }
}

.bottom-bar {
  background: bg-color(2);
  color: $view_fg_color;
  padding: rem(12px);
  min-height: rem(48px);

  &:disabled {
    background: gtkalpha($view_fg_color, 0.12);
    color: gtkalpha($view_fg_color, 0.38);
  }
}

.badge {
  border-radius: rem(9999px);
  background: $meson-red;
  margin-right: rem(-5px);
  margin-top: rem(-5px);
}
.modifier-badge {
  border-radius: rem(9999px);
  padding: rem(8px);
  font-weight: 700;

  label {
    padding: rem(5px) rem(8px);
  }
}
.tint-badge {
  padding: rem(3px) rem(5px);
}
.badge-info {
  border-radius: rem(8px);
  border: none;
  padding: rem(10px) rem(12px);
  margin-right: unset;
  margin-top: unset;
  font-weight: 700;
}

.toast-box {
  background: bg-color(-1);
  color: $view_bg_color;
  min-height: rem(48px);
  padding: rem(8px) rem(8px) rem(8px) rem(20px);
  border-radius: rem(4px);
  box-shadow: shadow(2);
	
  & button {
    background: none;
    font-weight: 900;
    color: $osd_accent_color;
		
    &:hover {
      color: $osd_accent_color;
    }
    &:active {
      color: $osd_accent_color;
    }
  }
}

.view-switcher {
  margin: 0;

  &:disabled {
    color: gtkalpha($view_fg_color, 0.38);
  }

  &.mini button.toggle {
    border-radius: 0;
    margin: 0;
  }

  button.toggle {
    font-weight: 300;
    font-size: 18pt;
    line-height: 20pt;
    padding: 0;
    background: transparent;
    border-radius: 0;
    color: gtkalpha($view_fg_color, 0.5);

    &:hover {
      background: transparent;
      color: gtkalpha($view_fg_color, 0.75);
    }

    &:checked {
      background: transparent;
      color: $view_fg_color;
      font-weight: 500;
    }

    &:active {
      background: transparent;
      color: $view_fg_color;
      font-weight: 500;
    }

    &:checked:hover {
      background: transparent;
      color: $view_fg_color;
      font-weight: 500;
    }

    &:active:hover {
      background: transparent;
      color: $view_fg_color;
      font-weight: 500;
    }
  }
}

.content-list {
  background: inherit;

  row {
    border: none;
    background: transparent;

    &:selected:hover {
      background: transparent;
    }

    &:selected,
    &:hover,
    &:active {
      background: transparent;
    }
  }
	
  & row:first-child .mini-content-block {
      border-top-left-radius: 18px;
	    border-top-right-radius: 18px;
      border-bottom-left-radius: 8px;
      border-bottom-right-radius: 8px;
  }
  & row:first-child:last-child .mini-content-block {
      border-top-left-radius: 8px;
      border-top-right-radius: 8px;
      border-bottom-left-radius: 8px;
      border-bottom-right-radius: 8px;
  }
  & row:last-child .mini-content-block {
      border-top-left-radius: 8px;
      border-top-right-radius: 8px;
      border-bottom-left-radius: 18px;
      border-bottom-right-radius: 18px;
  }
	.mini-content-block {
    margin: 2px 0 0 0;
  }
}

.dialog-content {
  margin: rem(24px);
  border-radius: rem(26px);
}

.link-button {
  padding: 0;
  margin: 0;
  min-height: 0;
  min-width: 0;

  &:disabled {
    color: gtkalpha($view_fg_color, 0.38);
  }

  &:hover label {
    background: bg-color(1);
    color: $accent_color;
  }
}

.tab-holder {
  background: transparent;
  box-shadow: none;
  margin: 0;
  padding: 0;
  border: none;
}
.tab-holder tabs {
    margin: 0;
    padding: 0;
    border: none;
    box-shadow: none;
}
.tab-holder header {
    border: none;
    box-shadow: none;
    margin: 0;
    padding: 0;
}
  
.tab-holder .tab-child {
    background: transparent;
    box-shadow: none;
    border: rem(1px) solid transparent;
    border-radius: rem(12px);
    padding: 0;
    margin: 0;
}
.tab-holder .tab button {
    background: transparent;
    border-radius: rem(9999px);
    margin: 0 rem(12px);
    padding: 0;

    &:hover {
      background: bg-color(2);
      color: $view_fg_color;
    }
    &:active {
      background: bg-color(3);
      color: $view_fg_color;
    }
}
.tab-holder .tab {
    background: transparent;
    box-shadow: none;
    border-radius: rem(12px) rem(12px) 0 0;
    margin: rem(6px) rem(2px) 0;
    padding: rem(2px) 0;
    border: none;

    &:hover {
      background: $view_bg_color;
    }
    &:checked {
      background: $view_bg_color;
    }
}
.tab-holder .disclosure-button {
    padding: rem(4px);
    margin: rem(6px);
    background: bg-color(1);
}

.navigation-rail {
  background: none;
  padding: 0;
  margin: 0;
}
.navigation-rail-button {
  background: none;
  margin: rem(6px) rem(12px);
  padding: rem(6px);
  min-height: rem(57px);
  min-width: rem(57px);

  &:disabled {
    background: gtkalpha($view_fg_color, 0.12);
    color: gtkalpha($view_fg_color, 0.38);
    box-shadow: none;
  }

  &:hover {
    background: bg-color(1);
    box-shadow: shadow(0);
  }
  &:checked {
    background: bg-color(2);
    box-shadow: shadow(1);
  }
  &:hover:checked {
    background: bg-color(3);
    box-shadow: shadow(1);
  }

  & image {
    margin: 0;
    padding: 0;
    margin-bottom: rem(6px);
    color: $view_fg_color;
    min-height: rem(32px);
    -gtk-icon-size: rem(23px);
  }
  & label {
    margin: 0;
    padding: 0;
    color: $view_fg_color;
    font-weight: 400;
  }
  &:checked label {
    font-weight: 600;
  }
  &:hover image {
    color: $view_fg_color;
    box-shadow: none;
  }
  &:checked image {
    color: $view_fg_color;
    box-shadow: none;
  }
  &:hover:checked image {
    color: $view_fg_color;
    box-shadow: none;
  }
}

.flat-appbar {
  padding: rem(10px) rem(8px) rem(8px) rem(10px);
  box-shadow: none;
}

.appbar {
  padding: rem(10px) rem(8px) rem(8px) rem(10px);
  background: bg-color(2);
  box-shadow: none;
}

.main-view {
  background: bg-color(0);
  color: $view_fg_color;

  & .mini-content-block,
  & .content-block {
    background: bg-color(1);
    
    & entry {
      background: bg-color(2);
    }
  }
}

.sidebar-view {
  background: bg-color(1);
	
  & entry {
	background: bg-color(3);
  }
	
  & .mini-content-block,
  & .content-block {
    background: bg-color(2);
    
    & entry {
      background: bg-color(3);
    }
  }
	
  & .appbar {
    background: bg-color(3);
    
    .disclosure-button {
      background: bg-color(4);
      
      &.toggle {
        background: bg-color(4);
        border-radius: rem(9999px);

        &:hover {
          background: $accent_bg_color;
          color: $accent_fg_color;
        }

        &:active {
          background: if(
            $variant == "light",
            gtkshade($accent_bg_color, 1.2),
            gtkshade($accent_bg_color, 0.8)
          );
          color: $accent_fg_color;
        }

        &:checked {
          background: if(
            $variant == "light",
            gtkshade($accent_bg_color, 1.2),
            gtkshade($accent_bg_color, 0.8)
          );
          color: $accent_fg_color;
        }
      }

      & button {
        background: bg-color(4);
        border-radius: rem(9999px);

        &:hover {
          background: $accent_bg_color;
          color: $accent_fg_color;
        }

        &:active {
          background: if(
            $variant == "light",
            gtkshade($accent_bg_color, 1.2),
            gtkshade($accent_bg_color, 0.8)
          );
          color: $accent_fg_color;
        }
        &:checked {
          background: if(
            $variant == "light",
            gtkshade($accent_bg_color, 1.2),
            gtkshade($accent_bg_color, 0.8)
          );
          color: $accent_fg_color;
        }
      }
    }
    .disclosure-button:hover {
      background: $accent_bg_color;
      color: $accent_fg_color;
    }
    .disclosure-button:checked {
      background: if(
        $variant == "light",
        gtkshade($accent_bg_color, 1.2),
        gtkshade($accent_bg_color, 0.8)
      );
      color: $accent_fg_color;
    }
  }
}

.view-chooser {
  & button:hover {
    background: bg-color(2);
    color: $view_fg_color;
  }
  & button:checked {
    background: bg-color(3);
    color: $view_fg_color;
  }
  & button:hover:checked {
    background: bg-color(4);
    color: $view_fg_color;
  }
}

.segmented-button > button:not(:first-child),
.segmented-button > button:not(:last-child) {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
    box-shadow: inset 0 0 0 rem(1px) $borders;
    margin-left: -1px;
}
.segmented-button button:first-child {
    border-top-left-radius: 9999px;
    border-bottom-left-radius: 9999px;
    box-shadow: inset 0 0 0 rem(1px) $borders;
    margin-left: 1px;
}
.segmented-button button:first-child:dir(rtl) {
    border-top-right-radius: 9999px;
    border-bottom-right-radius: 9999px;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    margin-left: -1px;
}
.segmented-button button:last-child {
    border-top-right-radius: 9999px;
    border-bottom-right-radius: 9999px;
    box-shadow: inset 0 0 0 rem(1px) $borders;
    margin-left: -1px;
}
.segmented-button button:last-child:dir(rtl) {
    border-top-left-radius: 9999px;
    border-bottom-left-radius: 9999px;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
    margin-left: 1px;
}
.segmented-button button {
    min-width: rem(48px);
    min-height: rem(20px);
    background: none;
    padding: 8px;
    color: $view_fg_color;

    &:disabled {
      background: gtkalpha($view_fg_color, 0.12);
      color: gtkalpha($view_fg_color, 0.38);
    }
}
.segmented-button button:hover {
    background: state-color($view_bg_color, 1);
    box-shadow: inset 0 0 0 rem(1px) $borders;
}
.segmented-button button:active {
    background: state-color($view_bg_color, 2);
    box-shadow: inset 0 0 0 rem(1px) $borders;
    color: $suggested_container_fg_color;
}
.segmented-button button:checked {
    background: image($suggested_container_bg_color);
    box-shadow: inset 0 0 0 rem(1px) $borders;
    color: $suggested_container_fg_color;
}
.segmented-button button:checked:hover {
    background: linear-gradient(0deg, gtkalpha($suggested_container_fg_color, 0.08), gtkalpha($suggested_container_fg_color, 0.08)), image($suggested_container_bg_color);
}
.segmented-button button:checked:active {
    background: linear-gradient(0deg, gtkalpha($suggested_container_fg_color, 0.12), gtkalpha($suggested_container_fg_color, 0.12)), image($suggested_container_bg_color);
}
.segmented-button image {
    margin-right: 12px;
    margin-left: 12px;
}
.segmented-button label {
    margin-right: 12px;
    margin-left: 12px;
}

.text-field {
    background: $headerbar_bg_color;
    border-radius: 4px 4px 0 0;
    box-shadow: inset 0px -1px 0px 0px $headerbar_fg_color;
    outline: none;
    min-height: 56px;
    color: $headerbar_fg_color;

    &:disabled {
      background: gtkalpha($view_fg_color, 0.04);
      color: gtkalpha($view_fg_color, 0.38);
    }

  & text {
    padding: 0px 16px;
    margin: 0;
  }
  & image {
    padding: 0 0 0 12px;
    margin: 0;
    -gtk-icon-size: 24px;
  }

  &:hover {
    box-shadow: inset 0px -2px 0px 0px $headerbar_fg_color;
  }
  
  &:active,
  &:focus-within {
    background: gtkshade($headerbar_bg_color, 0.95);
    box-shadow: inset 0px -2px 0px 0px $headerbar_fg_color;
  }

  &.tf-error {
    color: $error_bg_color;
    box-shadow: inset 0px -1px 0px 0px $error_bg_color;
    
    &:hover {
      box-shadow: inset 0px -2px 0px 0px $error_bg_color;
    }
  
    &:active,
    &:focus-within {
      background: gtkshade(gtkalpha($error_bg_color, 0.11), 0.95);
      box-shadow: inset 0px -2px 0px 0px $error_bg_color;
    }
  }

  &.tf-success {
    color: $success_bg_color;
    box-shadow: inset 0px -1px 0px 0px $success_bg_color;
    
    &:hover {
      box-shadow: inset 0px -2px 0px 0px $success_bg_color;
    }
  
    &:active,
    &:focus-within {
      background: gtkshade(gtkalpha($success_bg_color, 0.11), 0.95);
      box-shadow: inset 0px -2px 0px 0px $success_bg_color;
    }
  }
}

.switchbar {
  padding: 16px 22px;
  border-radius: 26px;
  margin: 8px 4px;
  background: bg-color(4);
	
	&:hover {
	  background: bg-color(5);
		color: $accent_color;
	}
	&:checked {
	  background: bg-color(4);
		color: $view_fg_color;
	}
	&:hover:checked {
	  background: bg-color(4);
		color: $accent_color;
	}
}
