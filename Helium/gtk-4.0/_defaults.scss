/* GTK NAMED COLORS
   ----------------
   use responsibly! */

// Sass thinks we're using the colors in the variables as strings and may shoot
// warning, it's innocuous and can be defeated by using #{$var}.

// These are the colors apps are can override. We define the defaults here and
// define variables for them in _colors.scss

// The main accent color and the matching text value
@define-color accent_bg_color #{if($variant == 'dark', "@purple_1", "@purple_3")};
@define-color accent_fg_color #{if($variant == 'dark', "@dark_1", "@light_1")};
@define-color accent_color #{if($variant == 'dark', "@purple_1", "@purple_3")};

// destructive-action buttons
@define-color destructive_bg_color #{if($variant == 'dark', "@red_1", "@red_3")};
@define-color destructive_fg_color #{if($variant == 'dark', "@dark_1", "@light_1")};
@define-color destructive_color #{if($variant == 'dark', "@red_1", "@red_3")};

// Levelbars, entries, labels and infobars. These don't need text colors
@define-color success_bg_color #{if($variant == 'dark', "@green_1", "@green_3")};
@define-color success_fg_color #{if($variant == 'dark', "@dark_1", "@light_1")};
@define-color success_color #{if($variant == 'dark', "@green_1", "@green_3")};

@define-color warning_bg_color #{if($variant == 'dark', "@yellow_1", "@yellow_3")};
@define-color warning_fg_color #{if($variant == 'dark', "@dark_1", "@light_1")};
@define-color warning_color #{if($variant == 'dark', "@yellow_1", "@yellow_3")};

@define-color error_bg_color #{if($variant == 'dark', "@red_1", "@red_3")};
@define-color error_fg_color #{if($variant == 'dark', "@dark_1", "@light_1")};
@define-color error_color #{if($variant == 'dark', "@red_1", "@red_3")};

@define-color info_bg_color #{if($variant == 'dark', "@blue_1", "@blue_3")};
@define-color info_fg_color #{if($variant == 'dark', "@dark_1", "@light_1")};
@define-color info_color #{if($variant == 'dark', "@blue_1", "@blue_3")};

// Window
@define-color window_bg_color #{if($variant == 'light', "@light_1", "@dark_5")};
@define-color window_fg_color #{if($variant == 'light', "@dark_5", "@light_1")};

// Views - e.g. text view or tree view
@define-color view_bg_color #{if($variant == 'light', "@light_1", "@dark_5")};
@define-color view_fg_color #{if($variant == 'light', "@dark_5", "@light_1")};

// Header bar, search bar, tab bar
@define-color headerbar_bg_color #{if($variant == 'light', "@light_1", "@dark_4")};
@define-color headerbar_fg_color #{if($variant == 'light', transparentize(black, .2), "@light_1")};
@define-color headerbar_border_color #{if($variant == 'light', transparentize(black, .2), "@light_1")};
@define-color headerbar_backdrop_color @window_bg_color;
@define-color headerbar_shade_color #{if($variant == 'light', transparentize(black, .93), transparentize(black, .64))};

// Cards, boxed lists
@define-color card_bg_color #{if($variant == 'light', #fafafa, #0d0d0d)};
@define-color card_fg_color #{if($variant == 'light', "@dark_4", "@light_1")};
@define-color card_shade_color #{if($variant == 'light', transparentize(black, .93), transparentize(black, .64))};

// Popovers
@define-color popover_bg_color #{if($variant == 'light', "@light_1", "@dark_5")};
@define-color popover_fg_color #{if($variant == 'light', transparentize(black, .2), "@light_1")};

// Miscellaneous
@define-color shade_color #{if($variant == 'light', transparentize(black, .93), transparentize(black, .64))};
@define-color scrollbar_outline_color #{if($variant == 'light', "@light_1", transparentize(black, .5))};
