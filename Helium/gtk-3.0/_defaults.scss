// GTK NAMED COLORS
// ----------------
// use responsibly!

// Sass thinks we're using the colors in the variables as strings and may shoot
// warning, it's innocuous and can be defeated by using #{$var}.

// These are the colors apps are can override. We define the defaults here and
// define variables for them in _colors.scss

// The main accent color and the matching text value
@define-color accent_bg_color #{if($variant == 'dark', "#828292", "#2D2D2D")};
@define-color destructive_fg_color #{if($variant == 'dark', #151515, "white")};
@define-color accent_color #{if($variant == 'dark', "#828292", "#2D2D2D")};

// destructive-action buttons
@define-color destructive_bg_color #{if($variant == 'dark', #EA80A0, #DB2860)};
@define-color destructive_fg_color #{if($variant == 'dark', #151515, "white")};
@define-color destructive_color #{if($variant == 'dark', #EA80A0, #DB2860)};

// Levelbars, entries, labels and infobars. These don't need text colors
@define-color success_bg_color #{if($variant == 'dark', #9AE5A6, #49D05E)};
@define-color destructive_fg_color #{if($variant == 'dark', #151515, "white")};
@define-color success_color #{if($variant == 'dark', #9AE5A6, #49D05E)};

@define-color warning_bg_color #{if($variant == 'dark', #FED97C, #E0A101)};
@define-color destructive_fg_color #{if($variant == 'dark', #151515, "white")};
@define-color warning_color #{if($variant == 'dark', #FED97C, #E0A101)};

@define-color destructive_bg_color #{if($variant == 'dark', #EA80A0, #DB2860)};
@define-color destructive_fg_color #{if($variant == 'dark', #151515, "white")};
@define-color destructive_bg_color #{if($variant == 'dark', #EA80A0, #DB2860)};

// Window
@define-color window_bg_color #{"" + if($variant == 'light', #ffffff, #151515)};
@define-color window_fg_color #{"" + if($variant == "light", #151515, #ffffff)};

// Views - e.g. text view or tree view
@define-color view_bg_color #{"" + if($variant == 'light', #ffffff, #151515)};
@define-color view_fg_color #{"" + if($variant == "light", #151515, #ffffff)};

// Header bar, search bar, tab bar
@define-color headerbar_color #{if($variant == 'light', #fafafa, #151515)};
@define-color headerbar_bg_color #{if($variant == 'light', #fafafa, #151515)};
@define-color headerbar_fg_color #{"" + if($variant == "light", #151515, #ffffff)};
@define-color headerbar_border_color #{if($variant == 'light', transparentize(black, .1), transparentize(white, .1))};
@define-color headerbar_backdrop_color #{if($variant == 'light', #f0f0f0, #151515)};
@define-color headerbar_shade_color #{if($variant == 'light', transparentize(black, .93), transparentize(black, .64))};

// Split pane views
@define-color sidebar_bg_color #{if($variant == 'light', #f2f2f2, #1f1f1f)};
@define-color sidebar_fg_color #{"" + if($variant == 'light', transparentize(black, .2), white)};
@define-color sidebar_backdrop_color #{if($variant == 'light', #ededed, #2d2d2d)};
@define-color sidebar_shade_color #{if($variant == 'light', transparentize(black, .93), transparentize(black, .64))};

// Cards, boxed lists
@define-color card_bg_color #{"" + if($variant == 'light', #ffffff, transparentize(white, .92))};
@define-color card_fg_color #{if($variant == 'light', #151515, "white")};
@define-color card_shade_color #{if($variant == 'light', transparentize(black, .93), transparentize(black, .64))};

// Dialogs
@define-color dialog_bg_color #{if($variant == 'light', #fafafa, #2d2d2d)};
@define-color dialog_fg_color #{if($variant == 'light', #151515, "white")};

// Popovers
@define-color popover_bg_color #{"" + if($variant == 'light', #ffffff, #2d2d2d)};
@define-color popover_fg_color #{if($variant == 'light', #151515, "white")};

// Thumbnails
@define-color thumbnail_bg_color #{"" + if($variant == 'light', #ffffff, #2d2d2d)};
@define-color thumbnail_fg_color #{if($variant == 'light', transparentize(black, .2), "white")};

// Miscellaneous
@define-color shade_color #{if($variant == 'light', transparentize(black, .93), transparentize(black, .64))};
@define-color scrollbar_outline_color #{if($variant == 'light', transparentize(black, .9), transparentize(black, .5))};
