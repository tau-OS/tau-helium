@use 'sass:color';
@use 'sass:math';
@use 'sass:meta';
@use 'sass:string';

@function transparentize($c, $a) {
  @return color.adjust($c, $alpha: -$a);
}

@function gtkalpha($c,$a) {
  @return string.unquote("alpha(#{$c},#{$a})");
}

@function gtkmix($c1, $c2, $r) {
  @if meta.type-of($r) == 'number' and math.unit($r) == "%" {
    $ratio: 1 - math.div($r, 100%);
    @return string.unquote("mix(#{$c1},#{$c2},#{$ratio})");
  }

  @return string.unquote("mix(#{$c1},#{$c2},#{$r})");
}

@function gtkshade($c,$s) {
  @return string.unquote("shade(#{$c},#{$s})");
}

@function gtkcolor($c) {
  @return string.unquote("@#{$c}");
}

@function state-color($base_color, $overlay_color, $level) {
  @if $level == 0 {
    @return image($base_color);
  } @else if $level == 1 {
    @return image(gtkmix($base_color, $overlay_color, 0.08));
  } @else if $level == 2 {
    @return image(gtkmix($base_color, $overlay_color, 0.1));
  } @else if $level == 3 {
    @return image(gtkmix($base_color, $overlay_color, 0.1));
  }

  @return image($base_color);
}

@function px-to-rem($pixels, $text-size: 10pt) {
  @if (math.is-unitless($pixels)) {
      $pixels: $pixels * 1px;
  }

  @if (math.is-unitless($text-size)) {
      $text-size: $text-size * 1px;
  }

  @if ($pixels > 0) {
      // Workaround GTK clamping instead of rounding up
      @return (calc($pixels / $text-size) * 1rem) + 0.000000001rem;
  } @else {
      @return (calc($pixels / $text-size) * 1rem) - 0.000000001rem;
  }
}

@function shadow($level) {
  // Sunken controls
  @if $level == -1 {
    @return
        0 -2px 0   0   rgb(0,   0,   0,   0.1),
        0 -1px 2px 0   rgb(0,   0,   0,   0.05),
        0  1px 2px 0   rgb(255, 255, 255, 0.05),
        0  2px 0   0   rgb(255, 255, 255, 0.1);
  // Outline border
  } @else if $level == 0 {
      @return
          0 1px  2px   0px rgb(0, 0, 0, 0.14),
          0 1px  2px   0px rgb(0, 0, 0, 0.14);
  // Elevation 1
  } @else if $level == 1 {
      @return
          0 2px  4px   0px rgb(0, 0, 0, 0.14),
          0 2px  4px   0px rgb(0, 0, 0, 0.14);
  // Elevation 2
  } @else if $level == 2 {
      @return
          0 4px  8px   0px rgb(0, 0, 0, 0.14),
          0 4px  8px   0px rgb(0, 0, 0, 0.14);
  // Elevation 3
  } @else if $level == 3 {
      @return
          0 8px  16px  0px rgb(0, 0, 0, 0.14),
          0 8px  16px  0px rgb(0, 0, 0, 0.14);
  // Elevation 4
  } @else if $level == 4 {
      @return
          0 16px 32px  0px rgb(0, 0, 0, 0.14),
          0 16px 32px  0px rgb(0, 0, 0, 0.14);
  // Elevation 5
  } @else if $level == 5 {
      @return
          0 32px 64px  0px rgb(0, 0, 0, 0.14),
          0 32px 64px  0px rgb(0, 0, 0, 0.14);
  }
}