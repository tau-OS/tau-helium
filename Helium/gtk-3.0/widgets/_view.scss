// **************
// * Tree Views *
// **************
@use 'shared' as *;
@use 'base' as *;
$_treeview_borders_color: $borders;

treeview.view {
  border-left-color: gtkmix(
    $window_fg_color,
    $view_bg_color,
    50%
  ); // this is actually the tree lines color,
  border-top-color: $bg_color; // while this is the grid lines color, better then nothing

  @at-root * {
    -gtktreeview-horizontal-separator: 4;
    -gtktreeview-grid-line-width: 1;
    -gtktreeview-grid-line-pattern: "";
    -gtktreeview-tree-line-width: 1;
    -gtktreeview-tree-line-pattern: "";
    -gtktreeview-expander-size: 16;
  }

  rubberband {
    @extend rubberband;
  } // to avoid borders being overridden by the previously set props

  &:selected {
    &:focus,
    & {
      border-radius: 0;

      @extend %selected_items;
    }

    &:backdrop,
    & {
      border-left-color: gtkmix($accent_fg_color, $accent_bg_color, 50%);
      border-top-color: gtkalpha($window_fg_color, 0.1); // doesn't work unfortunatelly
    }
  }

  &:disabled {
    color: $view_fg_color;

    &:selected {
      color: gtkmix($accent_fg_color, $accent_bg_color, 40%);
      &:backdrop {
        color: gtkmix($accent_fg_color, $accent_bg_color, 30%);
      }
    }
  }

  &.separator {
    min-height: 2px;
    color: $bg_color;
  }

  &:drop(active) {
    border-style: solid none;
    border-width: 1px;
    border-color: $outline;

    &.after {
      border-top-style: none;
    }

    &.before {
      border-bottom-style: none;
    }
  }

  &.expander {
    -gtk-icon-source: -gtk-icontheme("pan-end-symbolic");

    &:dir(rtl) {
      -gtk-icon-source: -gtk-icontheme("pan-end-symbolic-rtl");
    }

    color: gtkmix($window_fg_color, $view_bg_color, 70%);

    &:hover {
      color: $window_fg_color;
    }

    //&:selected {
    //color: gtkmix($accent_fg_color, $accent_bg_color, 70%);

    //&:hover { color: $accent_fg_color; }

    //&:backdrop { color: gtkmix($accent_fg_color, $accent_bg_color, 70%); }
    //}

    &:checked {
      -gtk-icon-source: -gtk-icontheme("pan-down-symbolic");
    }
  }

  &.progressbar {
    // progress bar in treeviews
    @if $variant == light {
      color: $view_bg_color;
    }

    background-color: $view_bg_color;
    background-image: image($view_bg_color);
    box-shadow: none;

    &:selected {
      &:focus,
      & {
        @if $variant == "light" {
          color: $accent_bg_color;
        } @else {
          box-shadow: inset 0 1px transparentize(white, 0.95);
        }

        background-image: image($view_bg_color);

        &:backdrop {
          @if $variant == "light" {
            color: $accent_bg_color;
          }
          background-color: $view_bg_color;
        }
      }
    }

    &:backdrop {
      @if $variant == "light" {
        color: $view_bg_color;
      } @else {
        border-color: $view_bg_color;
      }
      background-image: none;
      box-shadow: none;
    }
  }

  &.trough {
    // progress bar trough in treeviews
    background-color: gtkalpha($window_fg_color, 0.1);

    &:selected {
      &:focus,
      & {
        background-color: if(
          $variant == "light",
          gtkalpha($accent_fg_color, 0.3),
          gtkmix(black, $accent_bg_color, 10%)
        );
      }
    }
  }

  header {
    button {
      $_column_header_color: gtkmix($window_fg_color, $view_bg_color, 50%);

      @extend %column_header_button;

      color: $_column_header_color;
      background-color: $view_bg_color;
      font-weight: bold;
      font-size: small;
      text-shadow: none;
      box-shadow: none;

      &:hover {
        @extend %column_header_button;

        color: gtkmix($_column_header_color, $window_fg_color, 50%);
        box-shadow: none;
        transition: none; //I shouldn't need this
      }

      &:active {
        @extend %column_header_button;

        color: $window_fg_color;
        transition: none; //I shouldn't need this
      }
    }
  }

  button.dnd,
  header.button.dnd {
    // for treeview-like derive widgets
    &:active,
    &:selected,
    &:hover,
    & {
      padding: 0 6px;
      color: $view_bg_color;
      background-image: none;
      background-color: $accent_bg_color;
      border-style: none;
      border-radius: 0;
      box-shadow: inset 0 0 0 1px $view_bg_color;
      text-shadow: none;
      transition: none;
    }
  }

  acceleditor > label {
    background-color: $accent_bg_color;
  } // see tests/testaccel to test
}

%column_header_button {
  padding: 0 6px;
  background-image: none;
  border-style: none solid solid none;
  border-color: $_treeview_borders_color;
  border-radius: 0;
  text-shadow: none;

  &:disabled {
    border-color: $bg_color;
    background-image: none;
  }

  &:last-child {
    &:backdrop,
    & {
      border-right-style: none;
    }
  }
}

.view,
%view {
  color: $window_fg_color;
  caret-color: $caret_color;
  background-color: $view_bg_color;

  &:disabled {
    color: $view_fg_color;
    background-color: $view_bg_color;
  }

  &:selected {
    &:focus,
    & {
      @extend %selected_items;

      border-radius: $button_radius;
    }
  }
}

.view,
textview {
  text {
    @extend %view;

    selection {
      &:focus,
      & {
        @extend %selected_items;
      }
    }
  }
}

textview border {
  background-color: gtkmix($bg_color, $view_bg_color, 50%);
}

iconview {
  @extend .view;
}

.content-view .tile {
  margin: 2px;
  background-color: if($variant== "light", transparent, black);
  border-radius: 0;
  padding: 0;

  &:backdrop {
    background-color: if(
      $variant== "light",
      transparent,
      gtkmix(black, $base_color, 5%)
    );
  }
  &:active,
  &:selected {
    background-color: if($variant== "light", transparent, $accent_bg_color);
  }
  &:disabled {
    background-color: if(
      $variant== "light",
      transparent,
      $view_bg_color
    );
  }
}
