// ***************
// * Header bars *
// ***************

@use 'shared' as *;
@use 'base' as *;
@use 'toolbar' as *;
@use 'label' as *;
headerbar {
  @extend %toolbar;
  min-height: 32px;
  padding: 0;
  margin-left: -1px;
  margin-right: -1px;
  border: none;
  border-radius: 0;
  background: $headerbar_bg_color;
  color: $headerbar_fg_color;
  box-shadow: inset 0 -1px gtkalpha($window_fg_color, 0.1),
              inset 1px 0 gtkalpha($window_fg_color, 0.1),
              inset -1px 0 gtkalpha($window_fg_color, 0.1);
  transition: background 150ms $ease-out-quad, color 150ms $ease-out-quad;

  > box,
  > * > box {
    padding: 0 6px;
  }

  &:backdrop {
    background: $headerbar_backdrop_color;
    color: gtkalpha($view_fg_color, 0.66);
    box-shadow: inset 0 -1px gtkalpha($window_fg_color, 0.06),
                inset 1px 0 gtkalpha($window_fg_color, 0.06),
                inset -1px 0 gtkalpha($window_fg_color, 0.06);
    transition: $backdrop_transition;
  }

  &.flat {
    background: none;
    box-shadow: none;
    color: inherit;

    &:backdrop {
      background: none;
      color: gtkalpha($view_fg_color, 0.66);
    }
  }

  button.titlebutton.close,
  button.titlebutton.minimize,
  button.titlebutton.maximize {
    min-height: 22px;
    min-width: 22px;
    margin: 0;
    padding: 4px;
    border-radius: $button_radius;
    transition: $button_transition;
    background: transparent;
    color: $window_fg_color;

    &:hover { background: state-color(bg-color(-2), $surface_fg_color, 1); }

    &:active,
    &:hover:active { background: state-color(bg-color(-2), $surface_fg_color, 2); }

    &:backdrop { background: transparent; }

    &:backdrop:hover { background: $titlebutton_backdrop_hover; }
  }

  &.default-decoration {
    > box,
    > * > box {
      padding: 0 6px;
    }

    button.titlebutton.close,
    button.titlebutton.minimize,
    button.titlebutton.maximize {
      min-height: 22px;
      min-width: 22px;
      margin: 0;
      padding: 4px;
      border-radius: $button_radius;
      transition: $button_transition;
      background: transparent;
      color: $window_fg_color;

      &:hover { background: state-color(bg-color(-2), $surface_fg_color, 1); }

      &:active,
      &:hover:active { background: state-color(bg-color(-2), $surface_fg_color, 2); }

      &:backdrop { background: transparent; }

      &:backdrop:hover { background: $titlebutton_backdrop_hover; }
    }
  }

  &.selection-mode,
  .selection-mode & {
    background: $accent_bg_color;
    color: $accent_fg_color;
    box-shadow: inset 0 -1px gtkalpha($accent_fg_color, 0.3);

    &:backdrop {
      background: gtkmix($accent_bg_color, $headerbar_backdrop_color, 0.3);
      color: gtkalpha($accent_fg_color, 0.8);
      box-shadow: inset 0 -1px gtkalpha($accent_fg_color, 0.22);
    }

    .subtitle { color: gtkalpha($accent_fg_color, 0.7); }

    button {
      color: $accent_fg_color;
      background: transparent;
      border-color: transparent;
      box-shadow: none;

      &:hover { background: gtkalpha($accent_fg_color, 0.12); }

      &:active,
      &:checked,
      &.toggle:checked,
      &.toggle:active { background: gtkalpha($accent_fg_color, 0.18); }

      &:backdrop {
        color: gtkalpha($accent_fg_color, 0.8);
        background: transparent;

        &:active,
        &:checked { background: gtkalpha($accent_fg_color, 0.16); }

        &:disabled {
          color: gtkalpha($accent_fg_color, 0.4);
          background: transparent;
        }
      }

      &:disabled {
        color: gtkalpha($accent_fg_color, 0.4);
        background: transparent;
      }
    }
  }

  stackswitcher button:checked,
  button.toggle:checked {
    &:backdrop {
      @include button(backdrop-active);
    }
  }

  .title {
    padding-left: 12px;
    padding-right: 12px;
    font-weight: 600;
  }

  .subtitle {
    padding-left: 12px;
    padding-right: 12px;
    font-size: smaller;
    @extend .dim-label;
  }

  entry,
  spinbutton,
  separator:not(.sidebar),
  button {
    margin-top: 4px;
    margin-bottom: 4px;
  }

  switch {
    margin-top: 4px;
    margin-bottom: 4px;
  }

  &.titlebar {
    min-height: 32px;
  }

  &.titlebar headerbar:not(.titlebar) {
    background: none;
    box-shadow: none;
  }

  separator.titlebutton { opacity: 0; }

  .solid-csd & {
    &:dir(rtl),
    &:dir(ltr) {
      margin-top: -1px;
      margin-left: -1px;
      margin-right: -1px;
      border-radius: 0;
      box-shadow: none;

      > box,
      > * > box {
        padding-top: 1px;
      }
    }
  }
}

.titlebar:not(headerbar) {
  window.csd > & {
    padding: 0;
    background: transparent;
    border: none;
    box-shadow: none;
  }

  separator {
    background: $headerbar_border_color;
    &:backdrop { background: gtkalpha($headerbar_border_color, 0.6); }
  }
}

.background .titlebar {
  &:backdrop, & {
    border-top-left-radius: $window_radius;
    border-top-right-radius: $window_radius;
  }
}

.background.tiled .titlebar,
.background.tiled-top .titlebar,
.background.tiled-right .titlebar,
.background.tiled-bottom .titlebar,
.background.tiled-left .titlebar,
.background.maximized .titlebar,
.background.solid-csd .titlebar {
  &:backdrop, & {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
  }
}

headerbar { // headerbar border rounding

  window separator:first-child + &,
  window &:first-child { &:backdrop, & { border-top-left-radius: $window_radius; }}
  window &:last-child { &:backdrop, & { border-top-right-radius: $window_radius; }}

  window stack & { // tackles the stacked headerbars case
    &:first-child, &:last-child {
      &:backdrop, & {
        border-top-left-radius: $window_radius;
        border-top-right-radius: $window_radius;
      }
    }
  }

  window.tiled &,
  window.tiled-top &,
  window.tiled-right &,
  window.tiled-bottom &,
  window.tiled-left &,
  window.maximized &,
  window.fullscreen &,
  window.solid-csd & {
    &, &:backdrop {
      &,
      &:first-child,
      &:last-child,
      &:only-child {
        border-top-left-radius: 0;
        border-top-right-radius: 0;
      }
    }
  }
}

// Development versions of apps to use a differently styled headerbar

window.devel {
  headerbar.titlebar:not(.selection-mode) {
    $c: $headerbar_bg_color;
    $gradient: cross-fade(10% -gtk-icontheme("system-run-symbolic"), image(transparent)) 90% 0/256px 256px no-repeat,
               linear-gradient(to right, transparent 65%, gtkalpha($selected_bg_color, 0.2)),
               linear-gradient(to top, gtkmix(black, $c, 3%), $c 3px, gtkmix(white, $c, 6%));
    @if $variant == 'dark' {
      $gradient: cross-fade(10% -gtk-icontheme("system-run-symbolic"), image(transparent)) 90% 0/256px 256px no-repeat,
                 linear-gradient(to right, transparent 65%, gtkalpha($selected_bg_color, 0.1)),
                 linear-gradient(to top, gtkmix(white, $c, 3%) 3px, gtkmix(white, $c, 5%));
    }

    background: $bg_color $gradient;

    &:backdrop {
      background: $headerbar_backdrop_color cross-fade(10% -gtk-icontheme("system-run-symbolic"), image(transparent)) 90% 0/256px 256px no-repeat,
                  image($headerbar_backdrop_color); // background would flash
    }
  }
}

// **********************
// * Window Decorations *
// **********************
decoration {
  border-radius: $window_radius $window_radius 0 0;
  border-width: 0px;
  box-shadow: shadow(3),
              inset 0 0 0 1px gtkalpha($border_color, 0.12); //doing borders with box-shadow

  // this is used for the resize cursor area
  margin: 10px;

  &:backdrop {
    // the transparent shadow here is to enforce that the shadow extents don't
    // change when we go to backdrop, to prevent jumping windows.
    // The biggest shadow should be in the same order than in the active state
    // or the jumping will happen during the transition.
    box-shadow: 0 8px 16px 0 transparent,
                shadow(2),
                inset 0 0 0 1px gtkalpha($border_color, 0.12);
  }

  .maximized &,
  .fullscreen & { border-radius: 0; box-shadow: none; }

  .tiled &,
  .tiled-top &,
  .tiled-right &,
  .tiled-bottom &,
  .tiled-left & {
    border-radius: 0;
    box-shadow: 0 0 0 1px gtkalpha($border_color, 0.4),
                0 0 0 20px transparent;

    &:backdrop { box-shadow: inset 1px 0 gtkalpha($border_color, 0.12),
                             0 0 0 20px transparent;
    }
  }

  .popup & { box-shadow: none; }

  // server-side decorations as used by mutter
  .ssd & { background: $headerbar_bg_color; }
  .ssd &:backdrop { background: $headerbar_bg_color; color: transparentize(white, 0.66); }

  .csd.popup & {
    border-radius: $menu_radius;
    box-shadow: 0 1px 2px transparentize(black, 0.8),
                inset 1px 0 gtkalpha($border_color, 0.9);
  }

  tooltip.csd & {
    border-radius: 5px;
    box-shadow: none;
  }

  messagedialog.csd & {
    border-radius: $window_radius;
    box-shadow: 0 1px 2px transparentize(black, 0.8),
                inset 1px 0 gtkalpha($border_color, 0.9);
  }

  .solid-csd & {
    margin: 0;
    padding: 4px;
    background: $borders_color;
    border: solid 1px $borders_color;
    border-radius: 0;
    box-shadow: inset 1px 0 $borders_color;

    &:backdrop { box-shadow: inset 1px 0 $backdrop_bg_color; }
  }
}

.selection-mode headerbar button.titlebutton,
.selection-mode .titlebar button.titlebutton,
headerbar.selection-mode button.titlebutton,
.titlebar.selection-mode button.titlebutton {
  //@include _button_text_shadow(white, $suggested_bg_color);

  &:backdrop { -gtk-icon-shadow: none; }
}