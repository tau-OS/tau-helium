// *********
// * Menus *
// *********

@use 'shared' as *;
@use 'base' as *;
menubar,
.menubar {
  -GtkWidget-window-dragging: true;
  padding: 0;
  background: bg-color(-2);
  box-shadow: inset 0 -1px $border_color;

  &:backdrop {
    background: gtkmix($backdrop_bg_color, $backdrop_base_color, 0.5);
    box-shadow: inset 0 -1px gtkalpha($border_color, 0.5);
  }

  > menuitem {
    border-radius: 0;
    min-height: 48px;
    padding: 0 12px;
    color: $window_fg_color;
    font-weight: normal;

    &:hover,
    &:active {
      background: state-color($surface_bg_color, $surface_fg_color, 1);
      color: $window_fg_color;
    }

    &:checked {
      background: state-color($surface_bg_color, $surface_fg_color, 2);
      color: $window_fg_color;
    }

    &:disabled {
      color: gtkalpha($window_fg_color, 0.4);
      background: none;
    }

    menu { // nested menus inherit spacing and rounding
      &:dir(rtl),
      &:dir(ltr) {
        border-radius: $menu_radius;
        padding: 8px 0;
      }
    }
  }

  .csd.popup decoration { border-radius: $menu_radius; }
}

.background.popup { background: transparent; }

menu,
.menu,
%menu,
.context-menu {
  margin: 4px;
  padding: 8px 0;
  background: $popover_bg_color;
  color: $popover_fg_color;
  border-radius: $menu_radius;
  box-shadow: 0 1px 5px 1px $popover_shadow_near_color,
              0 2px 14px 3px $popover_shadow_far_color;

  separator { margin: 8px 0; }

  .csd & {
    border-color: transparent;
  }

  menuitem,
  %menuitem {
    border-radius: 0;
    min-height: 48px;
    padding: 0 12px;
    font-weight: normal;
    color: inherit;
    background: none;
    transition: background 150ms $ease-out-quad, color 150ms $ease-out-quad;

    &:hover,
    &:active,
    &:selected {
      background: state-color($surface_bg_color, $surface_fg_color, 1);
      color: $window_fg_color;
    }

    &:checked {
      background: state-color($surface_bg_color, $surface_fg_color, 2);
      color: $window_fg_color;
    }

    &:disabled {
      color: gtkalpha($popover_fg_color, 0.4);
      background: none;
    }

    arrow {
      min-height: 16px;
      min-width: 16px;
      opacity: $dimmer_opacity;

      &:dir(ltr) {
        -gtk-icon-source: -gtk-icontheme('pan-end-symbolic');
        margin-left: 10px;
      }

      &:dir(rtl) {
        -gtk-icon-source: -gtk-icontheme('pan-end-symbolic-rtl');
        margin-right: 10px;
      }

      &:hover { opacity: 1; }
    }

    label {
      &:dir(rtl),
      &:dir(ltr) {
        color: inherit;
      }
    }
  }

  > arrow {
    min-height: 24px;
    min-width: 24px;
    padding: 4px;
    border-radius: 0;
    background: $popover_bg_color;
    color: $popover_fg_color;

    &.top {
      margin-top: -8px;
      border-bottom: 1px solid gtkalpha($border_color, 0.4);
      border-top-right-radius: $menu_radius;
      border-top-left-radius: $menu_radius;
      -gtk-icon-source: -gtk-icontheme('pan-up-symbolic');
    }

    &.bottom {
      margin-bottom: -8px;
      border-top: 1px solid gtkalpha($border_color, 0.4);
      border-bottom-right-radius: $menu_radius;
      border-bottom-left-radius: $menu_radius;
      -gtk-icon-source: -gtk-icontheme('pan-down-symbolic');
    }

    &:hover {
      background: state-color($surface_bg_color, $surface_fg_color, 1);
    }

    &:disabled {
      color: gtkalpha($popover_fg_color, 0.3);
      background: none;
      border-color: transparent;
    }
  }
}

menuitem {
  accelerator {
    color: gtkalpha(currentColor, 0.55);

    &:dir(ltr) { margin-left: $menu_padding; }
    &:dir(rtl) { margin-right: $menu_padding; }
  }

  check,
  radio {
    min-height: 16px;
    min-width: 16px;
    margin-right: 7px;

    &:dir(rtl) {
      margin-right: 0;
      margin-left: 7px;
    }
  }
}