// *********
// * Lists *
// *********

@use 'shared' as *;
@use 'base' as *;
@use 'label' as *;
list,
listview {
  color: $view_fg_color;
  background: bg-color(0);
  background-clip: padding-box;
  border-color: $borders_color;

  > row {
    padding: 6px;
    background-clip: padding-box;

    label { color: $view_fg_color; }
    * { color: $view_fg_color; }
  }

  > row.expander { padding: 0; }
  > row.expander .row-header { padding: 2px; }

  &.horizontal row.separator,
  &.separators.horizontal > row:not(.separator) {
    border-left: 1px solid $borders_color;
  }

  &:not(.horizontal) row.separator,
  &.separators:not(.horizontal) > row:not(.separator) {
    border-bottom: 1px solid $borders_color;
  }
}

row {
  @include focus-ring();

  .osd &:focus:focus-visible { outline-color: $osd_focus_color; }

  background-clip: padding-box;
  color: $view_fg_color;
  transition: 200ms $ease-out-quad;

  &.activatable {
    &:hover { background: bg-color(1); color: $accent_color; }

    &:active { background: bg-color(2); color: $accent_color; }

    &.has-open-popup { background: bg-color(2); color: $accent_fg_color; }

    &:selected {
      &:hover { background: bg-color(2); color: $accent_color; }

      &:active { background: bg-color(3); color: $accent_color; }

      &.has-open-popup { background: bg-color(3); color: $accent_color; }
    }
  }

  &:selected {
    background: bg-color(3);
    color: $accent_color;
  }
}

.rich-list {
  > row {
    padding: 8px 12px;
    min-height: 40px;

    > box { border-spacing: 12px; }
  }
}

row {
  label.subtitle {
    font-size: smaller;
    color: $view_fg_color;
    @extend .dim-label;
  }

  > box.header {
    margin-left: 12px;
    margin-right: 12px;
    border-spacing: 6px;
    min-height: 50px;

    > .icon:disabled { filter: opacity($disabled_opacity); }

    > box.title {
      margin-top: 6px;
      margin-bottom: 6px;
      border-spacing: 3px;
      padding: 0;

      &,
      > .title,
      > .subtitle {
        padding: 0;
        font-weight: inherit;
      }
    }

    > .prefixes,
    > .suffixes { border-spacing: 6px; }

    > .icon,
    > .prefixes {
      &:dir(ltr) { margin-right: 6px; }
      &:dir(rtl) { margin-left: 6px; }
    }
  }
}

row.entry {
  @include focus-ring($focus-state: '.focused', $offset: -1px);
  color: $view_fg_color;

  &:not(:selected).activatable.focused:hover,
  &:not(:selected).activatable.focused:active {
    background: transparent;
  }

  .edit-icon,
  .indicator {
    min-width: 24px;
    min-height: 24px;
    padding: 5px;
  }

  .edit-icon:disabled { color: gtkalpha($view_fg_color, 0.38); }

  .indicator { opacity: $dimmer_opacity; }

  &.monospace {
    font-family: inherit;

    text { font-family: monospace; }
  }
}

row.combo {
  image.dropdown-arrow:disabled { filter: opacity($disabled_opacity); }

  listview.inline {
    background: none;
    border: none;
    box-shadow: none;
    color: inherit;

    &:disabled {
      background: gtkalpha($view_fg_color, 0.12);
      color: gtkalpha($view_fg_color, 0.38);
    }
  }

  popover > contents { min-width: 120px; }
}

@mixin _row-margin-start($margin) {
  &:dir(ltr) { margin-left: $margin; }
  &:dir(rtl) { margin-right: $margin; }
}

%boxed_list_row {
  @include focus-ring($offset: -1px);

  .osd &:focus:focus-visible { outline-color: $osd_focus_color; }

  transition: 200ms $ease-out-quad;
  border-bottom: 1px solid gtkalpha($border_color, 0.2);
  color: $view_fg_color;

  &:not(:selected).activatable {
    &:hover { background: bg-color(2); color: $accent_color; }

    &:active { background: bg-color(3); color: $accent_color; }

    &.has-open-popup { background: bg-color(3); color: $accent_color; }
  }
}

row.expander {
  background: none;
  padding: 0;

  > box > list {
    background: none;
    color: inherit;
  }

  list.nested {
    background: gtkalpha($card_shade_color, 0.5);
    color: inherit;
  }

  list.nested > row { @extend %boxed_list_row; }

  image.expander-row-arrow {
    transition: 200ms $ease-out-quad;
    @include _row-margin-start(6px);
  }

  &:checked image.expander-row-arrow { -gtk-icon-transform: rotate(0turn); }

  &:not(:checked) image.expander-row-arrow {
    @extend .dim-label;

    &:dir(ltr) { -gtk-icon-transform: rotate(-0.5turn); }
    &:dir(rtl) { -gtk-icon-transform: rotate(0.5turn); }
  }

  &:checked image.expander-row-arrow:not(:disabled) { color: $accent_color; }
  .osd &:checked image.expander-row-arrow:not(:disabled) { color: inherit; }
  image.expander-row-arrow:disabled { filter: opacity($disabled_opacity); }
}

list.content,
list.boxed-list {
  background: $card_bg_color;
  color: $view_fg_color;
  border-radius: $card_radius;
  border: 1px solid gtkalpha($border_color, 0.2);
  box-shadow: none;

  > row {
    @extend %boxed_list_row;
    background: transparent;

    &.expander { border: none; }

    &:first-child {
      &, &.expander row.header {
        border-top-left-radius: $card_radius;
        border-top-right-radius: $card_radius;
      }
    }

    &:last-child {
      &,
      &.expander:not(:checked),
      &.expander:not(:checked) row.header,
      &.expander:checked list.nested,
      &.expander:checked list.nested > row:last-child {
        border-bottom-left-radius: $card_radius;
        border-bottom-right-radius: $card_radius;
        border-bottom-width: 0;
      }
    }
  }
}