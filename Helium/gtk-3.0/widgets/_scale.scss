// ************
// * GtkScale *
// ************

@use 'shared' as *;
@use 'base' as *;
%scale_trough {
    border-radius: 99px;
    background-color: $trough_color;
  }
  
  %scale_highlight {
    border-radius: 99px;
    background-color: $accent_color;
    color: $fill_text_color;
  }
  
  scale {
    // sizing
    $_marks_length: 6px;
    $_marks_distance: 6px;
  
    min-height: 4px;
    min-width: 4px;
    padding: 12px;
  
    // those are inside the trough node, I need them to show their own border over the trough one, so negative margin
    //fill,
    //highlight { margin: -1px; }
  
    // the slider is inside the trough, so to have make it bigger there's a negative margin
  
    slider {
      min-width: 24px;
      min-height: 24px;
      margin: -10px;
    }
  
    // click-and-hold the slider to activate
    &.fine-tune {
      &.horizontal {
        padding-top: 9px;
        padding-bottom: 9px;
        min-height: 16px;
      }
  
      &.vertical {
        padding-left: 9px;
        padding-right: 9px;
        min-width: 16px;
      }
  
      // to make the trough grow in fine-tune mode
      slider { margin: -6px; }
  
      fill,
      highlight,
      trough {
        border-radius: 5px;
        -gtk-outline-radius: 7px;
      }
    }
  
    // the backing bit
    trough {
      @extend %scale_trough;
  
      outline-offset: 2px;
      -gtk-outline-radius: 5px;
    }
  
    // Match trough size to libadwaita
    &.horizontal trough { min-height: 4px; }
    &.vertical trough { min-width: 4px; }
  
    // the colored part of the backing bit
    highlight { @extend %scale_highlight; }
  
    // this is another differently styled part of the backing bit, the most relevant use case is for example
    // in media player to indicate how much video stream as been cached
    fill {
      @extend %scale_trough;
  
      &:backdrop, & { background-color: $borders_color; }
  
      &:disabled {
        &:backdrop, & {
          border-color: transparent;
          background-color: transparent;
        }
      }
  
      // OSD
      .osd & {
        background-color: gtkmix($osd_fg_color, $osd_borders_color, 25%);
  
        &:disabled {
          &:backdrop, & {
            border-color: transparent;
            background-color: transparent;
          }
        }
      }
    }
  
    slider {
      //@include button(normal-alt, $edge: $shadow_color);
  
      background-color: $accent_bg_color;
  
      // Trying to get this as close to libadwaita as possible. Only one outer box-shadow is allowed. Outlines are not supported.
      border: 1px solid transparent; //darken($alt_borders_color, 3%);
      border-radius: 100%;
      transition: $button_transition;
      transition-property: background, border, box-shadow;
  
      &:hover { background-color: $accent_bg_color; }
  
      //&:active { border-color: $progress_border_color; }
  
      &:disabled {
        @include button(insensitive);
        background-color: gtkmix($base_color, $slider_color, 50%);
        box-shadow: 0 0 0 1px transparentize(black, .85);
      }
  
      &:backdrop {
        transition: $backdrop_transition;
        box-shadow: 0 1px 2px 1px transparentize(black, .85);
  
        //@include button(backdrop);
  
        &:disabled {
          //@include button(backdrop-insensitive);
          box-shadow: 0 0 0 1px transparentize(black, .85);
        }
      }
  
      // ...on selected list rows
      row:selected & { &:disabled, & { border-color: $selected_borders_color; } }
  
      // OSD
      .osd & {
        //@include button(osd);
        //border-color: darken($osd_borders_color, 3%);
        //background-color: opacify($osd_bg_color, 1); // solid background needed here
        background-color: $slider_color;
        box-shadow: 0 1px 2px 1px transparentize(black, .75);
        border: 1px solid transparent;
  
        &:hover {
          background-color: $slider_hover_color;
          //@include button(osd-hover);
          //background-color: opacify($osd_bg_color, 1); // solid background needed here
        }
  
        //&:active {
        //  @include button(osd-active);
        //  background-color: opacify($osd_bg_color, 1); // solid background needed here
        //}
  
        &:disabled {
          //@include button(osd-insensitive);
          //background-color: opacify($osd_bg_color, 1); // solid background needed here
          @include button(insensitive);
          box-shadow: 0 0 0 1px transparentize(black, .8);
        }
  
        &:backdrop {
          //@include button(osd-backdrop);
          //background-color: opacify($osd_bg_color, 1); // solid background needed here
          transition: $backdrop_transition;
          box-shadow: 0 1px 2px 1px transparentize(black, .8);
  
          &:disabled {
            //@include button(osd-backdrop-insensitive);
            //background-color: opacify($osd_bg_color, 1); // solid background needed here
            box-shadow: 0 0 0 1px transparentize(black, .8);
          }
        }
      }
    }
  
    marks,
    value {
      color: gtkalpha(currentColor, 0.55);
      font-feature-settings: "tnum";
    }
  
    //marks margins
    @each $scale_orient, $marks_class, $marks_pos, $marks_margin in (horizontal, top, top, bottom),
                                                                    (horizontal, bottom, bottom, top),
                                                                    (vertical, top, left, right),
                                                                    (vertical, bottom, right, left) {
      &.#{$scale_orient} marks {
        &.#{$marks_class} {
          margin-#{$marks_margin}: $_marks_distance;
          margin-#{$marks_pos}: -($_marks_distance + $_marks_length);
        }
      }
  
      &.#{$scale_orient}.fine-tune marks {
        &.#{$marks_class} {
          margin-#{$marks_margin}: $_marks_distance;
          margin-#{$marks_pos}: -($_marks_distance + $_marks_length - 3px);
        }
      }
    }
  
    &.horizontal {
      indicator {
        min-height: $_marks_length;
        min-width: 1px;
      }
  
      &.fine-tune indicator { min-height: ($_marks_length - 3px); }
    }
  
    &.vertical {
      indicator {
        min-height: 1px;
        min-width: $_marks_length;
      }
  
      &.fine-tune indicator { min-width: ($_marks_length - 3px); }
    }
  
    // *WARNING* scale with marks madness following
  
    // FIXME: OSD and selected list rows missing, I don't feel like adding the other 144 assets needed for those...
    $suffix: if($variant == 'light', '', '-dark');
  
    @each $dir_class, $dir_infix in ('horizontal', 'horz'),
                                    ('vertical', 'vert') {
      @each $marks_infix, $marks_class in ('scale-has-marks-above', 'marks-before:not(.marks-after)'),
                                          ('scale-has-marks-below', 'marks-after:not(.marks-before)') {
        @each $state, $state_infix in ('', ''),
                                      (':hover', ''),
                                      (':disabled', '-insensitive'),
                                      (':backdrop', '-insensitive'),
                                      (':backdrop:disabled', '-insensitive') {
          &.#{$dir_class}.#{$marks_class} {
  
            slider {
              &#{$state} {
                // an asymmetric slider asset is used here, so the margins are uneven, the smaller
                // margin is set on the point side.
                margin: -10px;
                $_scale_asset: 'assets/slider-#{$dir_infix}-#{$marks_infix}#{$state_infix}#{$suffix}';
                border-style: none;
                border-radius: 0;
  
                background-color: transparent;
                background-image: -gtk-scaled(url('#{$_scale_asset}.png'), url('#{$_scale_asset}@2.png'));
                @if $variant == 'dark' {
                  &:hover, &:active {
                    background-image: -gtk-scaled(url('assets/slider-#{$dir_infix}-#{$marks_infix}.png'), url('assets/slider-#{$dir_infix}-#{$marks_infix}@2.png'));
                  }
                }
  
                $_scale_slider_bg_pos: bottom;
  
                @if $dir_class == 'horizontal' {
                  min-height: 28px;
                  min-width: 23px;
  
                  @if $marks_infix == 'scale-has-marks-above' {
                    margin-top: -14px;
  
                    $_scale_slider_bg_pos: top;
                  }
  
                  @else { margin-bottom: -14px; }
                }
  
                @else {
                  min-height: 23px;
                  min-width: 28px;
  
                  @if $marks_infix == 'scale-has-marks-above' {
                    margin-left: -14px;
  
                    $_scale_slider_bg_pos: left bottom;
                  }
  
                  @else {
                    margin-right: -14px;
  
                    $_scale_slider_bg_pos: right bottom;
                  }
                }
  
                background-position: $_scale_slider_bg_pos;
                background-repeat: no-repeat;
                box-shadow: none;
              }
            }
  
            &.fine-tune slider {
              // bigger negative margins to make the trough grow here as well
              margin: -7px;
  
              @if $dir_class == 'horizontal' {
                @if $marks_infix == 'scale-has-marks-above' { margin-top: -11px; }
  
                @else { margin-bottom: -11px; }
              }
  
              @else {
                @if $marks_infix == 'scale-has-marks-above' { margin-left: -11px; }
  
                @else { margin-right: -11px; }
              }
            }
          }
        }
      }
    }
  
    &.color {
      min-height: 0;
      min-width: 0;
  
      trough {
        background-image: image($borders_color);
        background-repeat: no-repeat;
      }
  
      &.horizontal {
        padding: 0 0 15px 0;
  
        trough {
          padding-bottom: 4px;
          background-position: 0 -3px;
          border-top-left-radius: 0;
          border-top-right-radius: 0;
        }
  
        slider {
          &:dir(ltr), &:dir(rtl) { // specificity bumb
            &:hover, &:backdrop, &:disabled, &:backdrop:disabled, & {
              margin-bottom: -15px;
              margin-top: 6px;
            }
          }
        }
      }
  
      &.vertical {
        &:dir(ltr) {
          padding: 0 0 0 15px;
  
          trough {
            padding-left: 4px;
            background-position: 3px 0;
            border-bottom-right-radius: 0;
            border-top-right-radius: 0;
          }
  
          slider {
            &:hover, &:backdrop, &:disabled, &:backdrop:disabled, & {
              margin-left: -15px;
              margin-right: 6px;
            }
          }
        }
  
        &:dir(rtl) {
          padding: 0 15px 0 0;
  
          trough {
            padding-right: 4px;
            background-position: -3px 0;
            border-bottom-left-radius: 0;
            border-top-left-radius: 0;
          }
  
          slider {
            &:hover, &:backdrop, &:disabled, &:backdrop:disabled, & {
              margin-right: -15px;
              margin-left: 6px;
            }
          }
        }
      }
  
      &.fine-tune {
        &.horizontal {
          &:dir(ltr), &:dir(rtl) { // specificity bump
            padding: 0 0 12px 0;
  
            trough {
              padding-bottom: 7px;
              background-position: 0 -6px;
            }
  
            slider {
              margin-bottom: -15px;
              margin-top: 6px;
            }
          }
        }
  
        &.vertical {
          &:dir(ltr) {
            padding: 0 0 0 12px;
  
            trough {
              padding-left: 7px;
              background-position: 6px 0;
            }
  
            slider {
              margin-left: -15px;
              margin-right: 6px;
            }
          }
  
          &:dir(rtl) {
            padding: 0 12px 0 0;
  
            trough {
              padding-right: 7px;
              background-position: -6px 0;
            }
  
            slider {
              margin-right: -15px;
              margin-left: 6px;
            }
          }
        }
      }
    }
  }
  